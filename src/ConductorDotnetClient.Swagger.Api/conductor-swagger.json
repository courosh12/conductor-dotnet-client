{
  "swagger": "2.0",
  "tags": [
    {
      "name": "Workflow Bulk Management"
    },
    {
      "name": "Task Management"
    },
    {
      "name": "Event Services"
    },
    {
      "name": "Health Check"
    },
    {
      "name": "Workflow Management"
    },
    {
      "name": "Metadata Management"
    },
    {
      "name": "Admin"
    }
  ],
  "paths": {
    "/admin/config": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get all the configuration parameters",
        "description": "",
        "operationId": "getAllConfig",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/admin/sweep/requeue/{workflowId}": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Queue up all the running workflows for sweep",
        "description": "",
        "operationId": "requeueSweep",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/admin/task/{tasktype}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get the list of pending tasks for a given task type",
        "description": "",
        "operationId": "view",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tasktype",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    },
    "/event": {
      "get": {
        "tags": [
          "Event Services"
        ],
        "summary": "Get all the event handlers",
        "description": "",
        "operationId": "getEventHandlers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventHandler"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Event Services"
        ],
        "summary": "Add a new event handler.",
        "description": "",
        "operationId": "addEventHandler",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventHandler"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "Event Services"
        ],
        "summary": "Update an existing event handler.",
        "description": "",
        "operationId": "updateEventHandler",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/EventHandler"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/event/queues": {
      "get": {
        "tags": [
          "Event Services"
        ],
        "summary": "Get registered queues",
        "description": "",
        "operationId": "getEventQueues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/event/queues/providers": {
      "get": {
        "tags": [
          "Event Services"
        ],
        "summary": "Get registered queue providers",
        "description": "",
        "operationId": "getEventQueueProviders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/event/{event}": {
      "get": {
        "tags": [
          "Event Services"
        ],
        "summary": "Get event handlers for a given event",
        "description": "",
        "operationId": "getEventHandlersForEvent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "event",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "activeOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventHandler"
              }
            }
          }
        }
      }
    },
    "/event/{name}": {
      "delete": {
        "tags": [
          "Event Services"
        ],
        "summary": "Remove an event handler",
        "description": "",
        "operationId": "removeEventHandlerStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health Check"
        ],
        "operationId": "doCheck",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/HealthCheckStatus"
            },
            "headers": {}
          }
        }
      }
    },
    "/metadata/taskdefs": {
      "get": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Gets all task definition",
        "description": "",
        "operationId": "getTaskDefs",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskDef"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Create new task definition(s)",
        "description": "",
        "operationId": "registerTaskDef",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskDef"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Update an existing task",
        "description": "",
        "operationId": "registerTaskDef",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskDef"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/metadata/taskdefs/{tasktype}": {
      "get": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Gets the task definition",
        "description": "",
        "operationId": "getTaskDef",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tasktype",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TaskDef"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Remove a task definition",
        "description": "",
        "operationId": "unregisterTaskDef",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tasktype",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/metadata/workflow": {
      "get": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Retrieves all workflow definition along with blueprint",
        "description": "",
        "operationId": "getAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowDef"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Create a new workflow definition",
        "description": "",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/WorkflowDef"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "put": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Create or update workflow definition",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkflowDef"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/metadata/workflow/{name}": {
      "get": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Retrieves workflow definition along with blueprint",
        "description": "",
        "operationId": "get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/WorkflowDef"
            }
          }
        }
      }
    },
    "/metadata/workflow/{name}/{version}": {
      "delete": {
        "tags": [
          "Metadata Management"
        ],
        "summary": "Removes workflow definition. It does not remove workflows associated with the definition.",
        "description": "",
        "operationId": "unregisterWorkflowDef",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/tasks": {
      "post": {
        "tags": [
          "Task Management"
        ],
        "summary": "Update a task",
        "description": "",
        "operationId": "updateTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaskResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks/externalstoragelocation": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get the external uri where the task payload is to be stored",
        "description": "",
        "operationId": "getExternalStorageLocation",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "operation",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payloadType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExternalStorageLocation"
            }
          }
        }
      }
    },
    "/tasks/in_progress/{tasktype}": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get in progress tasks. The results are paginated.",
        "description": "",
        "operationId": "getTasks",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tasktype",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "startKey",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    },
    "/tasks/in_progress/{workflowId}/{taskRefName}": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get in progress task for a given workflow id.",
        "description": "",
        "operationId": "getPendingTaskForWorkflow",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskRefName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/tasks/poll/batch/{tasktype}": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "batch Poll for a task of a certain type",
        "description": "",
        "operationId": "batchPoll",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tasktype",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "timeout",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    },
    "/tasks/poll/{tasktype}": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Poll for a task of a certain type",
        "description": "",
        "operationId": "poll",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tasktype",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerid",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/tasks/queue/all": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get the details about each queue",
        "description": "",
        "operationId": "all",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        }
      }
    },
    "/tasks/queue/all/verbose": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get the details about each queue",
        "description": "",
        "operationId": "allVerbose",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/queue/polldata": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get the last poll data for a given task type",
        "description": "",
        "operationId": "getPollData",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PollData"
              }
            }
          }
        }
      }
    },
    "/tasks/queue/polldata/all": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get the last poll data for all task types",
        "description": "",
        "operationId": "getAllPollData",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PollData"
              }
            }
          }
        }
      }
    },
    "/tasks/queue/requeue": {
      "post": {
        "tags": [
          "Task Management"
        ],
        "summary": "Requeue pending tasks for all the running workflows",
        "description": "",
        "operationId": "requeue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks/queue/requeue/{taskType}": {
      "post": {
        "tags": [
          "Task Management"
        ],
        "summary": "Requeue pending tasks",
        "description": "",
        "operationId": "requeuePendingTask",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskType",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks/queue/sizes": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get Task type queue sizes",
        "description": "",
        "operationId": "size",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskType",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "/tasks/queue/{taskType}/{taskId}": {
      "delete": {
        "tags": [
          "Task Management"
        ],
        "summary": "Remove Task from a Task type queue",
        "description": "",
        "operationId": "removeTaskFromQueue",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskType",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/tasks/search": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Search for tasks based in payload and other parameters",
        "description": "use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC. If order is not specified, defaults to ASC",
        "operationId": "search",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeText",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SearchResultTaskSummary"
            }
          }
        }
      }
    },
    "/tasks/{taskId}": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get task by Id",
        "description": "",
        "operationId": "getTask",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Task"
            }
          }
        }
      }
    },
    "/tasks/{taskId}/ack": {
      "post": {
        "tags": [
          "Task Management"
        ],
        "summary": "Ack Task is received",
        "description": "",
        "operationId": "ack",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workerid",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/tasks/{taskId}/log": {
      "get": {
        "tags": [
          "Task Management"
        ],
        "summary": "Get Task Execution Logs",
        "description": "",
        "operationId": "getTaskLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaskExecLog"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Task Management"
        ],
        "summary": "Log Task Execution Details",
        "description": "",
        "operationId": "log",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow": {
      "post": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Start a new workflow with StartWorkflowRequest, which allows task to be executed in a domain",
        "description": "",
        "operationId": "startWorkflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/StartWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/workflow/bulk/pause": {
      "put": {
        "tags": [
          "Workflow Bulk Management"
        ],
        "summary": "Pause the list of workflows",
        "description": "",
        "operationId": "pauseWorkflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkResponse"
            }
          }
        }
      }
    },
    "/workflow/bulk/restart": {
      "post": {
        "tags": [
          "Workflow Bulk Management"
        ],
        "summary": "Restart the list of completed workflow",
        "description": "",
        "operationId": "restart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "useLatestDefinitions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkResponse"
            }
          }
        }
      }
    },
    "/workflow/bulk/resume": {
      "put": {
        "tags": [
          "Workflow Bulk Management"
        ],
        "summary": "Resume the list of workflows",
        "description": "",
        "operationId": "resumeWorkflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkResponse"
            }
          }
        }
      }
    },
    "/workflow/bulk/retry": {
      "post": {
        "tags": [
          "Workflow Bulk Management"
        ],
        "summary": "Retry the last failed task for each workflow from the list",
        "description": "",
        "operationId": "retry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkResponse"
            }
          }
        }
      }
    },
    "/workflow/bulk/terminate": {
      "delete": {
        "tags": [
          "Workflow Bulk Management"
        ],
        "summary": "Terminate workflows execution",
        "description": "",
        "operationId": "terminate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BulkResponse"
            }
          }
        }
      }
    },
    "/workflow/decide/{workflowId}": {
      "put": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Starts the decision task for a workflow",
        "description": "",
        "operationId": "decide",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/externalstoragelocation": {
      "get": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Get the uri and path of the external storage where the workflow payload is to be stored",
        "description": "",
        "operationId": "getExternalStorageLocation",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "operation",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "payloadType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExternalStorageLocation"
            }
          }
        }
      }
    },
    "/workflow/running/{name}": {
      "get": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Retrieve all the running workflows",
        "description": "",
        "operationId": "getRunningWorkflow",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/workflow/search": {
      "get": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Search for workflows based on payload and other parameters",
        "description": "use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC. If order is not specified, defaults to ASC.",
        "operationId": "search",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeText",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SearchResultWorkflowSummary"
            }
          }
        }
      }
    },
    "/workflow/search-by-tasks": {
      "get": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Search for workflows based on task parameters",
        "description": "use sort options as sort=<field>:ASC|DESC e.g. sort=name&sort=workflowId:DESC. If order is not specified, defaults to ASC",
        "operationId": "searchWorkflowsByTasks",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeText",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "*"
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SearchResultWorkflowSummary"
            }
          }
        }
      }
    },
    "/workflow/{name}": {
      "post": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Start a new workflow. Returns the ID of the workflow instance that can be later used for tracking",
        "description": "",
        "operationId": "startWorkflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "correlationId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "priority",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/workflow/{name}/correlated": {
      "post": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Lists workflows for the given correlation id list",
        "description": "",
        "operationId": "getWorkflows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeClosed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeTasks",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Workflow"
                }
              }
            }
          }
        }
      }
    },
    "/workflow/{name}/correlated/{correlationId}": {
      "get": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Lists workflows for the given correlation id",
        "description": "",
        "operationId": "getWorkflows",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "correlationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeClosed",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeTasks",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          }
        }
      }
    },
    "/workflow/{workflowId}": {
      "get": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Gets the workflow by workflow id",
        "description": "",
        "operationId": "getExecutionStatus",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeTasks",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Workflow"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Terminate workflow execution",
        "description": "",
        "operationId": "terminate",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowId}/pause": {
      "put": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Pauses the workflow",
        "description": "",
        "operationId": "pauseWorkflow",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowId}/remove": {
      "delete": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Removes the workflow from the system",
        "description": "",
        "operationId": "delete",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "archiveWorkflow",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowId}/rerun": {
      "post": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Reruns the workflow from a specific task",
        "description": "",
        "operationId": "rerun",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/RerunWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/workflow/{workflowId}/resetcallbacks": {
      "post": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Resets callback times of all in_progress tasks to 0",
        "description": "",
        "operationId": "resetWorkflow",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowId}/restart": {
      "post": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Restarts a completed workflow",
        "description": "",
        "operationId": "restart",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "useLatestDefinitions",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowId}/resume": {
      "put": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Resumes the workflow",
        "description": "",
        "operationId": "resumeWorkflow",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowId}/retry": {
      "post": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Retries the last failed task",
        "description": "",
        "operationId": "retry",
        "consumes": [
          "*/*"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/workflow/{workflowId}/skiptask/{taskReferenceName}": {
      "put": {
        "tags": [
          "Workflow Management"
        ],
        "summary": "Skips a given task from a current running workflow",
        "description": "",
        "operationId": "skipTaskFromWorkflow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "taskReferenceName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SkipTaskRequest"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "WorkflowSummary": {
      "type": "object",
      "properties": {
        "workflowType": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "workflowId": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "RUNNING",
            "COMPLETED",
            "FAILED",
            "TIMED_OUT",
            "TERMINATED",
            "PAUSED"
          ]
        },
        "input": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "reasonForIncompletion": {
          "type": "string"
        },
        "executionTime": {
          "type": "integer",
          "format": "int64"
        },
        "event": {
          "type": "string"
        },
        "failedReferenceTaskNames": {
          "type": "string"
        },
        "externalInputPayloadStoragePath": {
          "type": "string"
        },
        "externalOutputPayloadStoragePath": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "inputSize": {
          "type": "integer",
          "format": "int64"
        },
        "outputSize": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "taskType": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "IN_PROGRESS",
            "CANCELED",
            "FAILED",
            "FAILED_WITH_TERMINAL_ERROR",
            "COMPLETED",
            "COMPLETED_WITH_ERRORS",
            "SCHEDULED",
            "TIMED_OUT",
            "SKIPPED"
          ]
        },
        "inputData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "referenceTaskName": {
          "type": "string"
        },
        "retryCount": {
          "type": "integer",
          "format": "int32"
        },
        "seq": {
          "type": "integer",
          "format": "int32"
        },
        "correlationId": {
          "type": "string"
        },
        "pollCount": {
          "type": "integer",
          "format": "int32"
        },
        "taskDefName": {
          "type": "string"
        },
        "scheduledTime": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "updateTime": {
          "type": "integer",
          "format": "int64"
        },
        "startDelayInSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "retriedTaskId": {
          "type": "string"
        },
        "retried": {
          "type": "boolean",
          "default": false
        },
        "executed": {
          "type": "boolean",
          "default": false
        },
        "callbackFromWorker": {
          "type": "boolean",
          "default": false
        },
        "responseTimeoutSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "workflowInstanceId": {
          "type": "string"
        },
        "workflowType": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "reasonForIncompletion": {
          "type": "string"
        },
        "callbackAfterSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "workerId": {
          "type": "string"
        },
        "outputData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "workflowTask": {
          "$ref": "#/definitions/WorkflowTask"
        },
        "domain": {
          "type": "string"
        },
        "inputMessage": {
          "$ref": "#/definitions/Any"
        },
        "outputMessage": {
          "$ref": "#/definitions/Any"
        },
        "rateLimitPerFrequency": {
          "type": "integer",
          "format": "int32"
        },
        "rateLimitFrequencyInSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "externalInputPayloadStoragePath": {
          "type": "string"
        },
        "externalOutputPayloadStoragePath": {
          "type": "string"
        },
        "workflowPriority": {
          "type": "integer",
          "format": "int32"
        },
        "executionNameSpace": {
          "type": "string"
        },
        "isolationGroupId": {
          "type": "string"
        },
        "taskDefinition": {
          "$ref": "#/definitions/TaskDef"
        },
        "queueWaitTime": {
          "type": "integer",
          "format": "int64"
        },
        "taskStatus": {
          "type": "string",
          "enum": [
            "IN_PROGRESS",
            "CANCELED",
            "FAILED",
            "FAILED_WITH_TERMINAL_ERROR",
            "COMPLETED",
            "COMPLETED_WITH_ERRORS",
            "SCHEDULED",
            "TIMED_OUT",
            "SKIPPED"
          ]
        }
      }
    },
    "ServiceOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserServiceOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/ServiceOptions"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ByteString": {
      "type": "object",
      "properties": {
        "validUtf8": {
          "type": "boolean",
          "default": false
        },
        "empty": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "ParserOneofOptions": {
      "type": "object"
    },
    "FieldOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "ctype": {
          "type": "string",
          "enum": [
            "STRING",
            "CORD",
            "STRING_PIECE"
          ]
        },
        "packed": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserFieldOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/FieldOptions"
        },
        "lazy": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "weak": {
          "type": "boolean",
          "default": false
        },
        "jstype": {
          "type": "string",
          "enum": [
            "JS_NORMAL",
            "JS_STRING",
            "JS_NUMBER"
          ]
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ParserEnumOptions": {
      "type": "object"
    },
    "UninterpretedOption": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "stringValue": {
          "$ref": "#/definitions/ByteString"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserUninterpretedOption"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/UninterpretedOption"
        },
        "positiveIntValue": {
          "type": "integer",
          "format": "int64"
        },
        "negativeIntValue": {
          "type": "integer",
          "format": "int64"
        },
        "aggregateValue": {
          "type": "string"
        },
        "aggregateValueBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "nameList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamePart"
          }
        },
        "nameOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamePartOrBuilder"
          }
        },
        "identifierValue": {
          "type": "string"
        },
        "identifierValueBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "nameCount": {
          "type": "integer",
          "format": "int32"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "MethodOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserMethodOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/MethodOptions"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "idempotencyLevel": {
          "type": "string",
          "enum": [
            "IDEMPOTENCY_UNKNOWN",
            "NO_SIDE_EFFECTS",
            "IDEMPOTENT"
          ]
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ParserAny": {
      "type": "object"
    },
    "SubWorkflowParams": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "taskToDomain": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ServiceDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "methods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MethodDescriptor"
          }
        },
        "options": {
          "$ref": "#/definitions/ServiceOptions"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaskDetails": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        },
        "taskRefName": {
          "type": "string"
        },
        "output": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "outputMessage": {
          "$ref": "#/definitions/Any"
        },
        "taskId": {
          "type": "string"
        }
      }
    },
    "ParserEnumValueOptions": {
      "type": "object"
    },
    "ParserMethodOptions": {
      "type": "object"
    },
    "WorkflowDef": {
      "type": "object",
      "required": [
        "tasks"
      ],
      "properties": {
        "ownerApp": {
          "type": "string"
        },
        "createTime": {
          "type": "integer",
          "format": "int64"
        },
        "updateTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTask"
          }
        },
        "inputParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "failureWorkflow": {
          "type": "string"
        },
        "schemaVersion": {
          "type": "integer",
          "format": "int32",
          "minimum": 2.0,
          "maximum": 2.0
        },
        "restartable": {
          "type": "boolean",
          "default": false
        },
        "workflowStatusListenerEnabled": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "EnumOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserEnumOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/EnumOptions"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "allowAlias": {
          "type": "boolean",
          "default": false
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "SkipTaskRequest": {
      "type": "object",
      "properties": {
        "taskInput": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "taskOutput": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "taskInputMessage": {
          "$ref": "#/definitions/Any"
        },
        "taskOutputMessage": {
          "$ref": "#/definitions/Any"
        }
      }
    },
    "PollData": {
      "type": "object",
      "properties": {
        "queueName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "workerId": {
          "type": "string"
        },
        "lastPollTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "ownerApp": {
          "type": "string"
        },
        "createTime": {
          "type": "integer",
          "format": "int64"
        },
        "updateTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "RUNNING",
            "COMPLETED",
            "FAILED",
            "TIMED_OUT",
            "TERMINATED",
            "PAUSED"
          ]
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "workflowId": {
          "type": "string"
        },
        "parentWorkflowId": {
          "type": "string"
        },
        "parentWorkflowTaskId": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        },
        "input": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "output": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "workflowType": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "correlationId": {
          "type": "string"
        },
        "reRunFromWorkflowId": {
          "type": "string"
        },
        "reasonForIncompletion": {
          "type": "string"
        },
        "schemaVersion": {
          "type": "integer",
          "format": "int32"
        },
        "event": {
          "type": "string"
        },
        "taskToDomain": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "failedReferenceTaskNames": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "workflowDefinition": {
          "$ref": "#/definitions/WorkflowDef"
        },
        "externalInputPayloadStoragePath": {
          "type": "string"
        },
        "externalOutputPayloadStoragePath": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 0.0,
          "maximum": 99.0
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "workflowName": {
          "type": "string"
        },
        "workflowVersion": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "EnumDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "containingType": {
          "$ref": "#/definitions/Descriptor"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumValueDescriptor"
          }
        },
        "options": {
          "$ref": "#/definitions/EnumOptions"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NamePartOrBuilder": {
      "type": "object",
      "properties": {
        "namePartBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "isExtension": {
          "type": "boolean",
          "default": false
        },
        "namePart": {
          "type": "string"
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Parser": {
      "type": "object"
    },
    "ParserNamePart": {
      "type": "object"
    },
    "NamePart": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserNamePart"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/NamePart"
        },
        "namePartBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "isExtension": {
          "type": "boolean",
          "default": false
        },
        "namePart": {
          "type": "string"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "TaskDef": {
      "type": "object",
      "required": [
        "timeoutSeconds"
      ],
      "properties": {
        "ownerApp": {
          "type": "string"
        },
        "createTime": {
          "type": "integer",
          "format": "int64"
        },
        "updateTime": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retryCount": {
          "type": "integer",
          "format": "int32",
          "minimum": 0.0
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "inputKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "timeoutPolicy": {
          "type": "string",
          "enum": [
            "RETRY",
            "TIME_OUT_WF",
            "ALERT_ONLY"
          ]
        },
        "retryLogic": {
          "type": "string",
          "enum": [
            "FIXED",
            "EXPONENTIAL_BACKOFF"
          ]
        },
        "retryDelaySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "responseTimeoutSeconds": {
          "type": "integer",
          "format": "int64",
          "minimum": 1.0
        },
        "concurrentExecLimit": {
          "type": "integer",
          "format": "int32"
        },
        "inputTemplate": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "rateLimitPerFrequency": {
          "type": "integer",
          "format": "int32"
        },
        "rateLimitFrequencyInSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "isolationGroupId": {
          "type": "string"
        },
        "executionNameSpace": {
          "type": "string"
        }
      }
    },
    "Descriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "containingType": {
          "$ref": "#/definitions/Descriptor"
        },
        "nestedTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Descriptor"
          }
        },
        "enumTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumDescriptor"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDescriptor"
          }
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDescriptor"
          }
        },
        "oneofs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OneofDescriptor"
          }
        },
        "options": {
          "$ref": "#/definitions/MessageOptions"
        },
        "extendable": {
          "type": "boolean",
          "default": false
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TaskResult": {
      "type": "object",
      "properties": {
        "workflowInstanceId": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "reasonForIncompletion": {
          "type": "string"
        },
        "callbackAfterSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "workerId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "IN_PROGRESS",
            "FAILED",
            "FAILED_WITH_TERMINAL_ERROR",
            "COMPLETED"
          ]
        },
        "outputData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "outputMessage": {
          "$ref": "#/definitions/Any"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskExecLog"
          }
        },
        "externalOutputPayloadStoragePath": {
          "type": "string"
        }
      }
    },
    "ParserMessageOptions": {
      "type": "object"
    },
    "SearchResultWorkflowSummary": {
      "type": "object",
      "properties": {
        "totalHits": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowSummary"
          }
        }
      }
    },
    "ParserServiceOptions": {
      "type": "object"
    },
    "UnknownFieldSet": {
      "type": "object",
      "properties": {
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "serializedSizeAsMessageSet": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/Parser"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/UnknownFieldSet"
        }
      }
    },
    "HealthCheckStatus": {
      "type": "object",
      "properties": {
        "healthResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Health"
          }
        },
        "suppressedHealthResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Health"
          }
        },
        "healthy": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "EnumValueOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserEnumValueOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/EnumValueOptions"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "Action": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "start_workflow",
            "complete_task",
            "fail_task"
          ]
        },
        "start_workflow": {
          "$ref": "#/definitions/StartWorkflow"
        },
        "complete_task": {
          "$ref": "#/definitions/TaskDetails"
        },
        "fail_task": {
          "$ref": "#/definitions/TaskDetails"
        },
        "expandInlineJSON": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Message": {
      "type": "object",
      "properties": {
        "parserForType": {
          "$ref": "#/definitions/ParserMessage"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/MessageLite"
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "TaskExecLog": {
      "type": "object",
      "properties": {
        "log": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "createdTime": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ParserMessage": {
      "type": "object"
    },
    "EventHandler": {
      "type": "object",
      "required": [
        "actions"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "condition": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        },
        "active": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "WorkflowTask": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "taskReferenceName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "inputParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "type": {
          "type": "string"
        },
        "dynamicTaskNameParam": {
          "type": "string"
        },
        "caseValueParam": {
          "type": "string"
        },
        "caseExpression": {
          "type": "string"
        },
        "scriptExpression": {
          "type": "string"
        },
        "decisionCases": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkflowTask"
            }
          }
        },
        "dynamicForkJoinTasksParam": {
          "type": "string"
        },
        "dynamicForkTasksParam": {
          "type": "string"
        },
        "dynamicForkTasksInputParamName": {
          "type": "string"
        },
        "defaultCase": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowTask"
          }
        },
        "forkTasks": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkflowTask"
            }
          }
        },
        "startDelay": {
          "type": "integer",
          "format": "int32"
        },
        "subWorkflowParam": {
          "$ref": "#/definitions/SubWorkflowParams"
        },
        "joinOn": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sink": {
          "type": "string"
        },
        "optional": {
          "type": "boolean",
          "default": false
        },
        "taskDefinition": {
          "$ref": "#/definitions/TaskDef"
        },
        "rateLimited": {
          "type": "boolean",
          "default": false
        },
        "defaultExclusiveJoinTask": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "asyncComplete": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Any": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "typeUrl": {
          "type": "string"
        },
        "typeUrlBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserAny"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Any"
        },
        "value": {
          "$ref": "#/definitions/ByteString"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "FieldDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "jsonName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "extensionScope": {
          "$ref": "#/definitions/Descriptor"
        },
        "type": {
          "type": "string",
          "enum": [
            "DOUBLE",
            "FLOAT",
            "INT64",
            "UINT64",
            "INT32",
            "FIXED64",
            "FIXED32",
            "BOOL",
            "STRING",
            "GROUP",
            "MESSAGE",
            "BYTES",
            "UINT32",
            "ENUM",
            "SFIXED32",
            "SFIXED64",
            "SINT32",
            "SINT64"
          ]
        },
        "containingType": {
          "$ref": "#/definitions/Descriptor"
        },
        "messageType": {
          "$ref": "#/definitions/Descriptor"
        },
        "containingOneof": {
          "$ref": "#/definitions/OneofDescriptor"
        },
        "enumType": {
          "$ref": "#/definitions/EnumDescriptor"
        },
        "defaultValue": {
          "type": "object"
        },
        "repeated": {
          "type": "boolean",
          "default": false
        },
        "javaType": {
          "type": "string",
          "enum": [
            "INT",
            "LONG",
            "FLOAT",
            "DOUBLE",
            "BOOLEAN",
            "STRING",
            "BYTE_STRING",
            "ENUM",
            "MESSAGE"
          ]
        },
        "options": {
          "$ref": "#/definitions/FieldOptions"
        },
        "optional": {
          "type": "boolean",
          "default": false
        },
        "mapField": {
          "type": "boolean",
          "default": false
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "liteType": {
          "type": "string",
          "enum": [
            "DOUBLE",
            "FLOAT",
            "INT64",
            "UINT64",
            "INT32",
            "FIXED64",
            "FIXED32",
            "BOOL",
            "STRING",
            "GROUP",
            "MESSAGE",
            "BYTES",
            "UINT32",
            "ENUM",
            "SFIXED32",
            "SFIXED64",
            "SINT32",
            "SINT64"
          ]
        },
        "extension": {
          "type": "boolean",
          "default": false
        },
        "liteJavaType": {
          "type": "string",
          "enum": [
            "INT",
            "LONG",
            "FLOAT",
            "DOUBLE",
            "BOOLEAN",
            "STRING",
            "BYTE_STRING",
            "ENUM",
            "MESSAGE"
          ]
        },
        "packable": {
          "type": "boolean",
          "default": false
        },
        "packed": {
          "type": "boolean",
          "default": false
        },
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ParserMessageLite": {
      "type": "object"
    },
    "StartWorkflowRequest": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "correlationId": {
          "type": "string"
        },
        "input": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "taskToDomain": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "workflowDef": {
          "$ref": "#/definitions/WorkflowDef"
        },
        "externalInputPayloadStoragePath": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "minimum": 0.0,
          "maximum": 99.0
        }
      }
    },
    "MessageOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "messageSetWireFormat": {
          "type": "boolean",
          "default": false
        },
        "mapEntry": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserMessageOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/MessageOptions"
        },
        "noStandardDescriptorAccessor": {
          "type": "boolean",
          "default": false
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "ParserFileOptions": {
      "type": "object"
    },
    "EnumValueDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "type": {
          "$ref": "#/definitions/EnumDescriptor"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "options": {
          "$ref": "#/definitions/EnumValueOptions"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ParserFieldOptions": {
      "type": "object"
    },
    "UninterpretedOptionOrBuilder": {
      "type": "object",
      "properties": {
        "stringValue": {
          "$ref": "#/definitions/ByteString"
        },
        "doubleValue": {
          "type": "number",
          "format": "double"
        },
        "positiveIntValue": {
          "type": "integer",
          "format": "int64"
        },
        "negativeIntValue": {
          "type": "integer",
          "format": "int64"
        },
        "aggregateValue": {
          "type": "string"
        },
        "aggregateValueBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "nameList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamePart"
          }
        },
        "nameOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NamePartOrBuilder"
          }
        },
        "identifierValue": {
          "type": "string"
        },
        "identifierValueBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "nameCount": {
          "type": "integer",
          "format": "int32"
        },
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/Message"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "Health": {
      "type": "object",
      "properties": {
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "healthy": {
          "type": "boolean",
          "default": false
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "BulkResponse": {
      "type": "object",
      "properties": {
        "bulkErrorResults": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "bulkSuccessfulResults": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MethodDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "service": {
          "$ref": "#/definitions/ServiceDescriptor"
        },
        "inputType": {
          "$ref": "#/definitions/Descriptor"
        },
        "outputType": {
          "$ref": "#/definitions/Descriptor"
        },
        "options": {
          "$ref": "#/definitions/MethodOptions"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ParserUninterpretedOption": {
      "type": "object"
    },
    "FileDescriptor": {
      "type": "object",
      "properties": {
        "messageTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Descriptor"
          }
        },
        "enumTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumDescriptor"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceDescriptor"
          }
        },
        "extensions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDescriptor"
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDescriptor"
          }
        },
        "publicDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileDescriptor"
          }
        },
        "options": {
          "$ref": "#/definitions/FileOptions"
        },
        "fullName": {
          "type": "string"
        },
        "syntax": {
          "type": "string",
          "enum": [
            "UNKNOWN",
            "PROTO2",
            "PROTO3"
          ]
        },
        "name": {
          "type": "string"
        },
        "package": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        }
      }
    },
    "MessageLite": {
      "type": "object",
      "properties": {
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "parserForType": {
          "$ref": "#/definitions/ParserMessageLite"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/MessageLite"
        }
      }
    },
    "StartWorkflow": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "correlationId": {
          "type": "string"
        },
        "input": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "inputMessage": {
          "$ref": "#/definitions/Any"
        },
        "taskToDomain": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "OneofOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserOneofOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/OneofOptions"
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "SearchResultTaskSummary": {
      "type": "object",
      "properties": {
        "totalHits": {
          "type": "integer",
          "format": "int64"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSummary"
          }
        }
      }
    },
    "TaskSummary": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        },
        "workflowType": {
          "type": "string"
        },
        "correlationId": {
          "type": "string"
        },
        "scheduledTime": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "IN_PROGRESS",
            "CANCELED",
            "FAILED",
            "FAILED_WITH_TERMINAL_ERROR",
            "COMPLETED",
            "COMPLETED_WITH_ERRORS",
            "SCHEDULED",
            "TIMED_OUT",
            "SKIPPED"
          ]
        },
        "reasonForIncompletion": {
          "type": "string"
        },
        "executionTime": {
          "type": "integer",
          "format": "int64"
        },
        "queueWaitTime": {
          "type": "integer",
          "format": "int64"
        },
        "taskDefName": {
          "type": "string"
        },
        "taskType": {
          "type": "string"
        },
        "input": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "externalInputPayloadStoragePath": {
          "type": "string"
        },
        "externalOutputPayloadStoragePath": {
          "type": "string"
        },
        "workflowPriority": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OneofDescriptor": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "format": "int32"
        },
        "fullName": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/FileDescriptor"
        },
        "containingType": {
          "$ref": "#/definitions/Descriptor"
        },
        "fieldCount": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldDescriptor"
          }
        },
        "options": {
          "$ref": "#/definitions/OneofOptions"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RerunWorkflowRequest": {
      "type": "object",
      "properties": {
        "reRunFromWorkflowId": {
          "type": "string"
        },
        "workflowInput": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "reRunFromTaskId": {
          "type": "string"
        },
        "taskInput": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "ExternalStorageLocation": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "FileOptions": {
      "type": "object",
      "properties": {
        "unknownFields": {
          "$ref": "#/definitions/UnknownFieldSet"
        },
        "serializedSize": {
          "type": "integer",
          "format": "int32"
        },
        "initialized": {
          "type": "boolean",
          "default": false
        },
        "javaStringCheckUtf8": {
          "type": "boolean",
          "default": false
        },
        "parserForType": {
          "$ref": "#/definitions/ParserFileOptions"
        },
        "defaultInstanceForType": {
          "$ref": "#/definitions/FileOptions"
        },
        "deprecated": {
          "type": "boolean",
          "default": false
        },
        "uninterpretedOptionList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOption"
          }
        },
        "uninterpretedOptionOrBuilderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UninterpretedOptionOrBuilder"
          }
        },
        "uninterpretedOptionCount": {
          "type": "integer",
          "format": "int32"
        },
        "javaPackage": {
          "type": "string"
        },
        "javaPackageBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "javaOuterClassname": {
          "type": "string"
        },
        "javaOuterClassnameBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "javaMultipleFiles": {
          "type": "boolean",
          "default": false
        },
        "javaGenerateEqualsAndHash": {
          "type": "boolean",
          "default": false
        },
        "optimizeFor": {
          "type": "string",
          "enum": [
            "SPEED",
            "CODE_SIZE",
            "LITE_RUNTIME"
          ]
        },
        "goPackage": {
          "type": "string"
        },
        "goPackageBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "ccGenericServices": {
          "type": "boolean",
          "default": false
        },
        "javaGenericServices": {
          "type": "boolean",
          "default": false
        },
        "pyGenericServices": {
          "type": "boolean",
          "default": false
        },
        "phpGenericServices": {
          "type": "boolean",
          "default": false
        },
        "ccEnableArenas": {
          "type": "boolean",
          "default": false
        },
        "objcClassPrefix": {
          "type": "string"
        },
        "objcClassPrefixBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "csharpNamespace": {
          "type": "string"
        },
        "csharpNamespaceBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "swiftPrefix": {
          "type": "string"
        },
        "swiftPrefixBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "phpClassPrefix": {
          "type": "string"
        },
        "phpClassPrefixBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "phpNamespace": {
          "type": "string"
        },
        "phpNamespaceBytes": {
          "$ref": "#/definitions/ByteString"
        },
        "initializationErrorString": {
          "type": "string"
        },
        "descriptorForType": {
          "$ref": "#/definitions/Descriptor"
        },
        "allFields": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "allFieldsRaw": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    }
  }
}